// <auto-generated />
using System;
using API_ProyectoFinal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_ProyectoFinal.Migrations
{
    [DbContext(typeof(API_Context))]
    partial class API_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_ProyectoFinal.Models.CalificacionDTO", b =>
                {
                    b.Property<int>("CalificacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalificacionID"));

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<int>("EvaluacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CalificacionID");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("EvaluacionId");

                    b.ToTable("Calificacion", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CategoriaCursoDTO", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("OrdenVisual")
                        .HasColumnType("int");

                    b.HasKey("CategoriaId");

                    b.ToTable("CategoriaCurso", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CategoriaEquipoDTO", b =>
                {
                    b.Property<int>("CategoriaEquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaEquipoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaEquipoId");

                    b.ToTable("CategoriaEquipo", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CertificadoDTO", b =>
                {
                    b.Property<int>("CertificadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificadoId"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfertaID")
                        .HasColumnType("int");

                    b.Property<int>("TipoCertID")
                        .HasColumnType("int");

                    b.HasKey("CertificadoId");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("OfertaID");

                    b.HasIndex("TipoCertID");

                    b.ToTable("Certificado", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CiudadDTO", b =>
                {
                    b.Property<int>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiudadId"));

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinciaEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CiudadId");

                    b.ToTable("Ciudad", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CursoDTO", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracionHoras")
                        .HasColumnType("int");

                    b.Property<int>("ModalidadId")
                        .HasColumnType("int");

                    b.Property<int>("NivelId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CursoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ModalidadId");

                    b.HasIndex("NivelId");

                    b.ToTable("Curso", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CursoHorarioDTO", b =>
                {
                    b.Property<int>("OfertaID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("HorarioID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("SalonID")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("OfertaID", "HorarioID", "SalonID");

                    b.HasIndex("CursoId");

                    b.HasIndex("HorarioID");

                    b.HasIndex("SalonID");

                    b.ToTable("CursoHorario", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CursoProgramaDTO", b =>
                {
                    b.Property<int>("CursoId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("FechaDefinicion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProgramaDTOProgramaId")
                        .HasColumnType("int");

                    b.HasKey("CursoId", "ProgramaId");

                    b.HasIndex("ProgramaDTOProgramaId");

                    b.HasIndex("ProgramaId");

                    b.ToTable("CursoPrograma", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.EquipoDTO", b =>
                {
                    b.Property<int>("EquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipoId"));

                    b.Property<int>("CantidadStock")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaEquipoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipoId");

                    b.HasIndex("CategoriaEquipoId");

                    b.ToTable("Equipo", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.EvaluacionDTO", b =>
                {
                    b.Property<int>("EvaluacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvaluacionId"));

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfertaId")
                        .HasColumnType("int");

                    b.Property<int>("PesoPorcentaje")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EvaluacionId");

                    b.HasIndex("CursoId");

                    b.HasIndex("OfertaId");

                    b.ToTable("Evaluacion", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.FacturaDTO", b =>
                {
                    b.Property<int>("FacturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacturaId"));

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PagoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FacturaId");

                    b.HasIndex("PagoId");

                    b.ToTable("Factura", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.HorarioDTO", b =>
                {
                    b.Property<int>("HorarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HorarioID"));

                    b.PrimitiveCollection<string>("DiasSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.HasKey("HorarioID");

                    b.ToTable("Horario", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.InscripcionDTO", b =>
                {
                    b.Property<int>("InscripcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InscripcionId"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfertaId")
                        .HasColumnType("int");

                    b.HasKey("InscripcionId");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("OfertaId");

                    b.ToTable("Inscripcion", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.ItemOrdenDTO", b =>
                {
                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ItemOrdenId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrdenId", "EquipoId");

                    b.HasIndex("EquipoId");

                    b.ToTable("ItemOrden", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.ModalidadDTO", b =>
                {
                    b.Property<int>("ModalidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModalidadId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModalidadId");

                    b.ToTable("Modalidad", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.NivelDificultadDTO", b =>
                {
                    b.Property<int>("NivelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NivelId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ordanilidad")
                        .HasColumnType("int");

                    b.HasKey("NivelId");

                    b.ToTable("NivelDificultad", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.OfertaCursoDTO", b =>
                {
                    b.Property<int>("OfertaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfertaId"));

                    b.Property<int>("CupoMaximo")
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.Property<int?>("SedeDTOSedeId")
                        .HasColumnType("int");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.HasKey("OfertaId");

                    b.HasIndex("CursoId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("SalonId");

                    b.HasIndex("SedeDTOSedeId");

                    b.HasIndex("SedeId");

                    b.ToTable("OfertaCurso", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.OrdenCompraDTO", b =>
                {
                    b.Property<int>("OrdenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdenId"));

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaOrden")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrdenId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("OrdenCompra", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.PagoDTO", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoId"));

                    b.Property<string>("EstadoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<int>("InscripcionId")
                        .HasColumnType("int");

                    b.Property<int>("MetodoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PagoId");

                    b.HasIndex("FacturaId");

                    b.HasIndex("InscripcionId");

                    b.ToTable("Pago", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.PreRequisitoCursoDTO", b =>
                {
                    b.Property<int>("CursoId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("PreRequisitoId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("FechaDefinicion")
                        .HasColumnType("datetime2");

                    b.HasKey("CursoId", "PreRequisitoId");

                    b.HasIndex("PreRequisitoId");

                    b.ToTable("PreRequisitoCurso", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.ProgramaDTO", b =>
                {
                    b.Property<int>("ProgramaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramaId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramaId");

                    b.ToTable("Programa", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.ProveedorDTO", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedorId"));

                    b.Property<string>("ContactoEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.RolDTO", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<int>("NombreRol")
                        .HasColumnType("int");

                    b.HasKey("RolId");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.SalonDTO", b =>
                {
                    b.Property<int>("SalonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalonId"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.HasKey("SalonId");

                    b.HasIndex("SedeId");

                    b.ToTable("Salon", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.SedeDTO", b =>
                {
                    b.Property<int>("SedeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SedeId"));

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SedeId");

                    b.HasIndex("CiudadId");

                    b.ToTable("Sede", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.TipoCertificadoDTO", b =>
                {
                    b.Property<int>("TipoCertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoCertId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoCertId");

                    b.ToTable("TipoCertificado", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.UsuarioDTO", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.UsuarioRolDTO", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("UsuarioRol", (string)null);
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CalificacionDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.UsuarioDTO", "Estudiante")
                        .WithMany("Calificaciones")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.EvaluacionDTO", "Evaluacion")
                        .WithMany("Calificaciones")
                        .HasForeignKey("EvaluacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Evaluacion");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CertificadoDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.UsuarioDTO", "Estudiante")
                        .WithMany("Certificados")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.OfertaCursoDTO", "OfertaCurso")
                        .WithMany()
                        .HasForeignKey("OfertaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.TipoCertificadoDTO", "TipoCertificado")
                        .WithMany("Certificados")
                        .HasForeignKey("TipoCertID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("OfertaCurso");

                    b.Navigation("TipoCertificado");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CursoDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.CategoriaCursoDTO", "CategoriaCurso")
                        .WithMany("Cursos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.ModalidadDTO", "Modalidad")
                        .WithMany("Cursos")
                        .HasForeignKey("ModalidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.NivelDificultadDTO", "NivelDificultad")
                        .WithMany("Cursos")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaCurso");

                    b.Navigation("Modalidad");

                    b.Navigation("NivelDificultad");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CursoHorarioDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.CursoDTO", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.HorarioDTO", "Horario")
                        .WithMany("CursoHorarios")
                        .HasForeignKey("HorarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.OfertaCursoDTO", "OfertaCurso")
                        .WithMany("CursoHorarios")
                        .HasForeignKey("OfertaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.SalonDTO", "Salon")
                        .WithMany("CursoHorarios")
                        .HasForeignKey("SalonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Horario");

                    b.Navigation("OfertaCurso");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CursoProgramaDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.CursoDTO", "Curso")
                        .WithMany("CursoProgramas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.ProgramaDTO", null)
                        .WithMany("CursosProgramas")
                        .HasForeignKey("ProgramaDTOProgramaId");

                    b.HasOne("API_ProyectoFinal.Models.ProgramaDTO", "Programa")
                        .WithMany("CursoProgramas")
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.EquipoDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.CategoriaEquipoDTO", "CategoriaEquipo")
                        .WithMany("Equipos")
                        .HasForeignKey("CategoriaEquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaEquipo");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.EvaluacionDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.CursoDTO", "Curso")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.OfertaCursoDTO", "OfertaCurso")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("OfertaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("OfertaCurso");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.FacturaDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.PagoDTO", "Pago")
                        .WithMany("Facturas")
                        .HasForeignKey("PagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.InscripcionDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.UsuarioDTO", "Estudiante")
                        .WithMany("Inscripciones")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.OfertaCursoDTO", "OfertaCurso")
                        .WithMany("Inscripciones")
                        .HasForeignKey("OfertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("OfertaCurso");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.ItemOrdenDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.EquipoDTO", "Equipo")
                        .WithMany("ItemsOrden")
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.OrdenCompraDTO", "OrdenCompra")
                        .WithMany("ItemsOrden")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("OrdenCompra");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.OfertaCursoDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.CursoDTO", "Curso")
                        .WithMany("Ofertas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.UsuarioDTO", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.SalonDTO", "Salon")
                        .WithMany("Ofertas")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.SedeDTO", null)
                        .WithMany("Ofertas")
                        .HasForeignKey("SedeDTOSedeId");

                    b.HasOne("API_ProyectoFinal.Models.SedeDTO", "Sede")
                        .WithMany("OfertasCurso")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");

                    b.Navigation("Salon");

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.OrdenCompraDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.ProveedorDTO", "Proveedor")
                        .WithMany("OrdenesCompra")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.PagoDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.FacturaDTO", "Factura")
                        .WithMany()
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.InscripcionDTO", "Inscripcion")
                        .WithMany("Pagos")
                        .HasForeignKey("InscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.PreRequisitoCursoDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.CursoDTO", "Curso")
                        .WithMany("PreRequisitos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.CursoDTO", "PreRequisito")
                        .WithMany("EsPrerequisitoDe")
                        .HasForeignKey("PreRequisitoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("PreRequisito");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.SalonDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.SedeDTO", "Sede")
                        .WithMany("Salones")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.SedeDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.CiudadDTO", "Ciudad")
                        .WithMany("Sedes")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.UsuarioDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.RolDTO", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.UsuarioRolDTO", b =>
                {
                    b.HasOne("API_ProyectoFinal.Models.RolDTO", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ProyectoFinal.Models.UsuarioDTO", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CategoriaCursoDTO", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CategoriaEquipoDTO", b =>
                {
                    b.Navigation("Equipos");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CiudadDTO", b =>
                {
                    b.Navigation("Sedes");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.CursoDTO", b =>
                {
                    b.Navigation("CursoProgramas");

                    b.Navigation("EsPrerequisitoDe");

                    b.Navigation("Evaluaciones");

                    b.Navigation("Ofertas");

                    b.Navigation("PreRequisitos");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.EquipoDTO", b =>
                {
                    b.Navigation("ItemsOrden");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.EvaluacionDTO", b =>
                {
                    b.Navigation("Calificaciones");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.HorarioDTO", b =>
                {
                    b.Navigation("CursoHorarios");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.InscripcionDTO", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.ModalidadDTO", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.NivelDificultadDTO", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.OfertaCursoDTO", b =>
                {
                    b.Navigation("CursoHorarios");

                    b.Navigation("Evaluaciones");

                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.OrdenCompraDTO", b =>
                {
                    b.Navigation("ItemsOrden");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.PagoDTO", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.ProgramaDTO", b =>
                {
                    b.Navigation("CursoProgramas");

                    b.Navigation("CursosProgramas");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.ProveedorDTO", b =>
                {
                    b.Navigation("OrdenesCompra");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.RolDTO", b =>
                {
                    b.Navigation("UsuarioRoles");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.SalonDTO", b =>
                {
                    b.Navigation("CursoHorarios");

                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.SedeDTO", b =>
                {
                    b.Navigation("Ofertas");

                    b.Navigation("OfertasCurso");

                    b.Navigation("Salones");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.TipoCertificadoDTO", b =>
                {
                    b.Navigation("Certificados");
                });

            modelBuilder.Entity("API_ProyectoFinal.Models.UsuarioDTO", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("Certificados");

                    b.Navigation("Inscripciones");

                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
